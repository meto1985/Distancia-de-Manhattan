/*
1842 - Distancia de Manhattan
Descripción

Dadas dos coordenadas enteras puntos en el plano (X, Y), se puede determinar la
distancia de Manhattan entre ellos? Recuerde que la distancia de Manhattan entre
dos puntos es la diferencia entre las X, más la diferencia entre el Ys :)
ESPECIFICACIÓN de entrada

La primera línea contiene un número entero 1 <= T <= 10 ^ 4 que es el número de
casos de prueba. Siguiendo esta camiseta existen -Casos. Cada caso de prueba
consta de cuatro números enteros X1 , Y1 , X2 y Y2 ... en una línea por sí mismo
denota las coordenadas de los puntos. Los valores de las coordenadas de todos
los puntos, serán siempre entre -10 ^ 4 y 10 ^ 4 .
ESPECIFICACIÓN de salida

Para cada caso de prueba de salida de una sola línea con el número uno entero:
la distancia de Manhattan, entre los puntos dados.
Example de entrada

3
2 3 4 5
6 7 8 3
2 8 6 4
Example de salida

4
6
8
 */
package Distancia_de_Manhattan;

import java.util.Scanner;

/**
 *
 * @author mou
 */
public class Manhattan {

    public static void main(String[] args) {
        Scanner leer = new Scanner(System.in);
        int num = leer.nextInt();
        int cont = 0;
        int[] arreglo = new int[num];
        String cadena;

        int[] X1 = new int[num];
        int[] X2 = new int[num];
        int[] Y1 = new int[num];
        int[] Y2 = new int[num];

        int[] tempX2 = new int[num];
        int[] tempY2 = new int[num];

        leer.nextLine();

        do {
            cadena = leer.nextLine();
            String[] temp = cadena.split(" ");
            X1[cont] = Integer.parseInt(temp[0]);
            X2[cont] = Integer.parseInt(temp[2]);
            Y1[cont] = Integer.parseInt(temp[1]);
            Y2[cont] = Integer.parseInt(temp[3]);
//            if ((X2[cont] > X1[cont])) {
//                arreglo[cont] = ((X1[cont] - X2[cont]) + (Y2[cont] - Y1[cont]));
//                if ((Y2[cont] > Y1[cont])) {
//                    arreglo[cont] = ((((X2[cont] - X1[cont]) + (Y1[cont] - Y2[cont]))) * (-1));
//                }
//            } else {
            tempX2[cont] = esPositivoX(X1, X2);
            tempY2[cont] = esPositivoY(Y1, Y2);
            arreglo[cont] = ((tempX2[cont] - X1[cont]) + (tempY2[cont] - Y1[cont]));
//            }
            cont++;
        } while (cont != num);

        for (int i = 0; i < arreglo.length; i++) {
            System.out.println(arreglo[i]);
        }
    }

    static int esPositivoX(int[] array1, int[] array2) {
        int num = 0;
        for (int i = 0; i < array1.length; i++) {
            if (array2[i] < array1[i]) {
                num = array2[i];
                array2[i] = array1[i];
                array1[i] = num;
            }
        }
        return num;
    }

    static int esPositivoY(int[] array1, int[] array2) {
        int num = 0;
        for (int i = 0; i < array1.length; i++) {
            if (array2[i] < array1[i]) {
                num = array2[i];
                array2[i] = array1[i];
                array1[i] = num;
            }
        }
        return num;
    }
}
